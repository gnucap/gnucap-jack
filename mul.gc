attach lang_adms.so
attach s_jack.cc
attach bm_jack.cc
attach bm_jack_wrap.cc

options trace

adms
`include "discipline.h"
`include "constants.h"

module mul(p,a,b);
   inout p,a,b;
   electrical p,a,b;

   parameter real gain = 1 from [0:inf);

   analog begin
      V(p) <+ gain * V(a) * V(b);
   end
endmodule
endadms

paramset mymul mul;
   .gain=1;
endparamset


m_jack #(.connect(1)) outleft(nout_left half);
m_jack #(.connect(2)) outright(nout_right half);

v_jack in_left(0 nin_left);
v_jack in_right(0 nin_right);

mymul mul_left (p_left, nin_left, nin_left);
mymul mul_right (p_right, nin_right, nin_right);

spice
Voff 0 half .5

.subckt lp nmul nout
E1 nout 0 0 nm tanh gain=10k limit=1
R1 nmul nm .005k
R2 nm nout .01k
C1 nout nm 6u
.ends

Xleft p_left nout_left lp
Xright p_right nout_right lp

.list

.print tran v(1) v(nin_*) v(nout_*) v(X*.nm)
.jack sample=24k
.end
